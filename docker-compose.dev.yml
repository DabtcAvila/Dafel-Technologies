version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      target: development
    container_name: dafel-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - DATABASE_URL=postgresql://dafel_user:DafelSecure2025!@postgres:5432/dafel_db
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    networks:
      - dafel-network
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: dafel-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dafel_user
      - POSTGRES_PASSWORD=DafelSecure2025!
      - POSTGRES_DB=dafel_db
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./frontend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - dafel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dafel_user -d dafel_db"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dafel-network:
    driver: bridge

volumes:
  node_modules:
  next_cache:
  postgres_data: